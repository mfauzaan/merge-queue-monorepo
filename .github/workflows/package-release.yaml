name: Package Release
run-name: ${{ inputs.tag_name }} / ${{ inputs.channel }}

# on:
#   pull_request:
#   push:
#     branches:
#       - main
on:
  workflow_dispatch:
    inputs:
      tag_name:
        required: true
        type: string
        description: Tag name
      channel:
        type: choice 
        description: release channel
        options: 
        - stable
        - beta

permissions:
  contents: read # for checkout

jobs:
  # build_main:
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   steps:
  # Steps for building and testing main releases
  # Trigger deployment to production environment

  release:
    # if: github.ref == 'refs/heads/beta'
    name: Release Package
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create the release
        env:
          DO_PUBLISH: ${{ inputs.channel == 'production' }}
          TAG_NAME: ${{ inputs.tag_name }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_args=(
            "$TAG_NAME"
            --title "GitHub CLI ${TAG_NAME#v}"
            --target "$GITHUB_SHA"
            --generate-notes
          )

          if [[ $TAG_NAME == *-* ]]; then
            release_args+=( --prerelease )
          else
            release_args+=( --discussion-category "General" )
          fi

          echo gh release create "${release_args[@]}" --

      # - name: Setup Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: "lts/*"

      # - name: Install dependencies
      #   run: npm clean-install

      # - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
      #   run: npm audit signatures

      # - name: Release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: npx semantic-release -t 'v${version}-b${{ github.run_id }}.${{ github.run_number }}'
    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v4
    #     with:
    #       fetch-depth: 0

    #   - name: Semantic Release
    #     uses: cycjimmy/semantic-release-action@v4
    #     with:
    #       semantic_version: 23.1.1
    #       tag_format: v${version}-b${{ github.run_id }}.${{ github.run_number }}
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


