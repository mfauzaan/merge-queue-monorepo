name: Package Release
run-name: ${{ inputs.package }} / ${{ inputs.version }}

on:
  workflow_dispatch:
    inputs:
      package:
        type: choice 
        description: package
        options: 
        - merge-queue
      version:
        type: choice
        description: Next Release version
        options:
          - "minor"
          - "major"
          - "prerelease"
          - "patch"

permissions: 
  contents: write

jobs:
  release:
    name: Release Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Create the release
        env:
          PACKAGE: ${{ inputs.package }}
          VERSION: ${{ inputs.version }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_RUN_ID: ${{ github.run_id }}
          GH_RUN_NUMBER: ${{ github.run_number }}
        run: |
          cd ./$PACKAGE
          zip -r dist.zip ./dist

          TAG_NAME=$(npm version ${VERSION} --commit-hooks false --git-tag-version false)
          PACKAGE_TITLE=$(echo "$PACKAGE" | sed -E 's/(^| |-)([a-z])/\U\2 /g')

          release_args=(
            "${TAG_NAME}-b${GH_RUN_ID}.${GH_RUN_NUMBER}"
            --title "${PACKAGE_TITLE} ${TAG_NAME#v}"
            --target "$GITHUB_SHA"
            --generate-notes
          )

          if [[ $TAG_NAME == *-* ]]; then
            release_args+=( --prerelease )
          fi

          git config user.name "GitHub Release Action"
          git config user.email "<>"

          gh release create "${release_args[@]}" --
          git add package.json package-lock.json
          git commit -m "(${PACKAGE}): Version bumped to ${TAG_NAME}"
          git push
